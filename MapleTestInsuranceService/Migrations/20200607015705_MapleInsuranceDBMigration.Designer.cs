// <auto-generated />
using System;
using MapleTestInsuranceService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MapleTestInsuranceService.Migrations
{
    [DbContext(typeof(MapleInsuranceContext))]
    [Migration("20200607015705_MapleInsuranceDBMigration")]
    partial class MapleInsuranceDBMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MapleTestInsuranceService.Models.CoveragePlan", b =>
                {
                    b.Property<long>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoveragePlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EligibilityDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EligibilityDateTo")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanId");

                    b.ToTable("CoveragePlans");

                    b.HasData(
                        new
                        {
                            PlanId = 1L,
                            CoveragePlanName = "Gold",
                            EligibilityCountry = "USA",
                            EligibilityDateFrom = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EligibilityDateTo = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PlanId = 2L,
                            CoveragePlanName = "Platinum",
                            EligibilityCountry = "CAN",
                            EligibilityDateFrom = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EligibilityDateTo = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PlanId = 3L,
                            CoveragePlanName = "Silver",
                            EligibilityCountry = "OTHER",
                            EligibilityDateFrom = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EligibilityDateTo = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MapleTestInsuranceService.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoveragePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MapleTestInsuranceService.Models.RateChart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoveragePlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerAgeFrom")
                        .HasColumnType("int");

                    b.Property<int>("CustomerAgeTo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<double>("NetPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RateCharts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CoveragePlanName = "Gold",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "M",
                            NetPrice = 1000.0
                        },
                        new
                        {
                            Id = 2L,
                            CoveragePlanName = "Gold",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "M",
                            NetPrice = 2000.0
                        },
                        new
                        {
                            Id = 3L,
                            CoveragePlanName = "Gold",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "F",
                            NetPrice = 1200.0
                        },
                        new
                        {
                            Id = 4L,
                            CoveragePlanName = "Gold",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "F",
                            NetPrice = 2500.0
                        },
                        new
                        {
                            Id = 5L,
                            CoveragePlanName = "Silver",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "M",
                            NetPrice = 1500.0
                        },
                        new
                        {
                            Id = 6L,
                            CoveragePlanName = "Silver",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "M",
                            NetPrice = 2600.0
                        },
                        new
                        {
                            Id = 7L,
                            CoveragePlanName = "Silver",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "F",
                            NetPrice = 1900.0
                        },
                        new
                        {
                            Id = 8L,
                            CoveragePlanName = "Silver",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "F",
                            NetPrice = 2800.0
                        },
                        new
                        {
                            Id = 9L,
                            CoveragePlanName = "Platinum",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "M",
                            NetPrice = 1900.0
                        },
                        new
                        {
                            Id = 10L,
                            CoveragePlanName = "Platinum",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "M",
                            NetPrice = 2900.0
                        },
                        new
                        {
                            Id = 11L,
                            CoveragePlanName = "Platinum",
                            CustomerAgeFrom = 18,
                            CustomerAgeTo = 40,
                            CustomerGender = "F",
                            NetPrice = 2100.0
                        },
                        new
                        {
                            Id = 12L,
                            CoveragePlanName = "Platinum",
                            CustomerAgeFrom = 41,
                            CustomerAgeTo = 100,
                            CustomerGender = "F",
                            NetPrice = 3200.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
